SET(
  SOURCES
  pangolin.h test.cpp
)

CONFIGURE_FILE(
  "${CMAKE_CURRENT_SOURCE_DIR}/${PROJECT_NAME}Config.h.in"
  "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.h"
)
INCLUDE_DIRECTORIES("${PROJECT_BINARY_DIR}")

FIND_PACKAGE(OpenGL REQUIRED QUIET)
FIND_PACKAGE(GLU REQUIRED QUIET)
FIND_PACKAGE(FREEGLUT REQUIRED QUIET)

#FIND_PACKAGE(ROBOTVISION QUIET)
IF(ROBOTVISION_FOUND)
  INCLUDE_DIRECTORIES(${ROBOTVISION_INCLUDE_DIR})
ENDIF()

#FIND_PACKAGE(CUDA QUIET)
IF(CUDA_FOUND)
  CUDA_INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
  SET(CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE OFF)
  INCLUDE_DIRECTORIES( ${CUDA_SDK_ROOT_DIR}/common/inc )
  LINK_DIRECTORIES( ${CUDA_SDK_ROOT_DIR}/common/lib )
  SET(CUDA_NVCC_FLAGS "-O3;-arch=sm_20;--verbose" )
  ADD_DEFINITIONS(-DHAVE_CUDA)
  ADD_DEFINITIONS(-DUSE_CUDA_UTILS)
  MESSAGE(STATUS "CUDA Found and Enabled")
ENDIF()

IF(CUDA_FOUND)
  CUDA_ADD_LIBRARY(${LIBRARY_NAME} ${SOURCES})
ELSE()
  ADD_LIBRARY(${LIBRARY_NAME} ${SOURCES})
ENDIF()

TARGET_LINK_LIBRARIES(
  ${LIBRARY_NAME}
  ${OpenGL_LIBRARY}
  ${GLU_LIBRARY}
  ${FREEGLUT_LIBRARY}
  ${ROBOTVISION_LIBRARY}
)
